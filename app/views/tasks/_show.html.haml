- task_item = show
%li.taskItem{:id => "task_item_#{task_item.id}"}
  - if task_item.can_be_changed_by(@logged_user) && !task_item.is_completed?
    .taskItemHandle{:style => "display:none"}
      .inner [+]
  .taskItemContent
    - if task_item.can_be_changed_by(@logged_user)
      .taskControls
        = link_to render_icon('trash', 'Trash'), task_path(:id => task_item.id, :task_list_id => task_item.task_list_id), {:aconfirm => :task_delete_confirm.l, :class => 'blank taskDelete'}
        = link_to 'Edit', edit_task_path(:id => task_item.id, :task_list_id => task_item.task_list_id), {:class => 'blank taskEdit edit'}
    - if task_item.can_be_changed_by(@logged_user)
      %input.checkbox.completion{ :type => "checkbox", :checked => "#{task_item.is_completed? ? 'true' : 'false'}" }/
      = link_to '', status_task_path(:id => task_item, :task_list_id => task_item.task_list_id)
    - else
      %span.taskCheckbox= render_icon( (task_item.completed_on.nil? ? 'not-checked' : 'checked'), :task_open.l)
    %span.taskText
      - if not task_item.assigned_to.nil?
        %span.assignedTo
          = "#{task_item.assigned_to.object_name}:"
      = h task_item.text
      %span.desc
        = "(#{:task_created_by.l_with_args( :user => link_to(h(task_item.created_by.display_name), user_path(:id => task_item.created_by_id)))})"
      - if task_item.is_completed?
        %span.desc
          = "(#{:task_list_completed_time_with_user.l_with_args( :time => format_usertime(task_item.completed_on, :task_list_completed_time_format), :user => link_to_unless(task_item.completed_by.nil?, h(task_item.completed_by.try(:display_name)), user_path(:id => task_item.completed_by_id)))})"
    .taskActions
      - if task_item.comment_can_be_added_by(@logged_user)
        = link_to render_icon('comment','', { :class => "comment" }), task_path(:id => task_item.id, :task_list_id => task_item.task_list_id), {:class => 'blank'}
      - if !task_item.is_completed? && ProjectTime.can_be_created_by(@logged_user, task_item.project)
        - running_time = running_time_for_task(task_item)
        - unless running_time.nil?
          = link_to render_icon('stop', :stop_time.l), stop_time_path(:active_project => running_time.project_id, :id => running_time.id), :class => 'blank stopTime'
        - else
          = link_to render_icon('start', :start_time.l), times_path, :class => 'blank startTime', :task_id => task_item.id
