.message
  .messageDetails
    - if not @message.created_by.nil?
      .messageUserAvatar{:style => "float:right"}
        %img{:alt => "#{h @message.created_by.display_name} Avatar", :src => @message.created_by.avatar_url}/
      .messageAuthor
        %span
          = "#{:from.l}:"
        = link_to( h(@message.created_by.display_name), user_path(:id => @message.created_by.id))
    .messageDate
      %span
        = "#{:log_date.l}:"
      = format_usertime(@message.created_on, :message_created_format)
    - unless @message.project_milestone.nil?
      .messageMilestone
        %span
          = "#{:milestone.l}:"
        = link_to h(@message.project_milestone.object_name), @message.project_milestone.object_url
    - unless @message.tags.blank?
      .messageTags
        %span
          = "#{:tags.l}:"
        = @message.tags
    .clear &nbsp;
  .messageText
    = textilize @message.text
    - if !@message.additional_text.nil? and @message.additional_text?
      .messageSeparator= :message_seperator.l
    = textilize @message.additional_text
  = render :partial => 'files/list_attached_files', :locals => {:dont_add => true, :attached_files => @message.attached_files(@logged_user.member_of_owner?), :attached_files_object => @message}
  .messageOptions= action_list actions_for_message(@message)
/ Comments
#messageComments
  = render :partial => 'comments/object_comments', :locals => {:comments => @logged_user.member_of_owner? ? @message.comments : @message.comments.public}
  - if @message.comment_can_be_added_by(@logged_user)
    = render :partial => 'comments/add_form', :locals => {:commented_object => @message}